// Generated by Apple Swift version 4.2.1 (swiftlang-1000.11.42 clang-1000.11.45.1)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="TpsSdk",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


/// PlateModel for the VehicleModel that includes Plates
SWIFT_CLASS("_TtC6TpsSdk10PlateModel")
@interface PlateModel : NSObject
@property (nonatomic, copy) NSString * _Nullable code;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable country;
@property (nonatomic, copy) NSString * _Nonnull number;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCode:(NSString * _Nonnull)code source:(NSString * _Nonnull)source number:(NSString * _Nonnull)number;
- (nonnull instancetype)initWithCode:(NSString * _Nonnull)code source:(NSString * _Nonnull)source country:(NSString * _Nullable)country number:(NSString * _Nonnull)number;
/// Whole plate number
@property (nonatomic, readonly, copy) NSString * _Nonnull plate;
@end


/// Supply enrollment for authentication
SWIFT_PROTOCOL("_TtP6TpsSdk13TokenProvider_")
@protocol TokenProvider
/// Token that supply from the Tps Development Team.
/// warning:
/// This is mandatory for valid interactions
@property (nonatomic, readonly, copy) NSString * _Nonnull authenticationToken;
@end

@class TpsBuilder;
@class VehicleModel;
@class NSError;
@class Transaction;

/// <h2>TPS SDK - IOS Guide</h2>
/// TPS Sdk is usable the managing vehicles for your integrated Ticketless Parking System
/// In order to use Sdk framework you must be a registered developer with a provisioned API key.
/// <h2>Requirements</h2>
/// <ul>
///   <li>
///     SDK Supports min IOS 11 Deployment Target.
///   </li>
///   <li>
///     TokenProvider Protocol must be implemented for Authentication Token: Provided by TPS Development Team.
///   </li>
/// </ul>
/// <h2>Integration</h2>
/// To install the TPS SDK directly into your application, open your project and open the project navigator (<em>⌘ + 0</em>) > Tap on <em>Your Project</em> > Under <em>Targets</em>, click on the selected <em>Build Target</em> > Tap on the <em>General</em> tab, located at the top > Drag the TpsSdk.framework into the <em>Embedded Frameworks</em> section. The TpsSdk.framework should appear in both the Embedded Frameworks and Linked Libraries and Frameworks section.
/// <h1>SDK Overview</h1>
/// <h2>Initialize and Start Sdk</h2>
/// Use TPSSdk framework, import TPSSdk first, and then call TPSSdk’s <em>start</em> function.
/// \code
/// let environment = TpsEnvironment.sharedInstance.selectEnvironment(.staging)
/// let builder = TpsBuilder(environment: environment, tokenProvider: self)
/// TpsSdk.shared.start(builder: builder)
///
/// \endcodeprecondition:
/// Tps Authentication process
/// author:
///
/// VNGRS
/// version:
///
/// 1.0
SWIFT_PROTOCOL("_TtP6TpsSdk3Tps_")
@protocol Tps
/// Start the Tps for initial logic
/// important:
/// Don’t forget the implementation TokenProvider protocol for your valid access which is given by the Tps.
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     TpsBuilder: Builder includes TokenProvider and TpsEnvironment
///   </li>
/// </ul>
/// \code
/// // Sample Implementation
/// let environment = TpsEnvironment.sharedInstance.selectEnvironment(.staging)
/// let builder = TpsBuilder(environment: environment, tokenProvider: self)
/// TpsSdk.shared.start(builder: builder)
///
/// \endcode
- (void)startWithBuilder:(TpsBuilder * _Nonnull)builder;
/// Get all your registered vehicles
/// important:
/// User’s id needed
/// \param handler Use that Tps Handler for result
/// <ul>
///   <li>
///     <code>vehicles</code>: Gives the all registered vehicles
///   </li>
///   <li>
///     <code>error</code>: Gives error object that includes error logic
///   </li>
/// </ul>
///
///
/// throws:
/// <code>TpsError.someError</code>
/// <ul>
///   <li>
///     An error of type <code>TpsError</code>
///   </li>
/// </ul>
- (void)getRegisteredVehiclesWithHandler:(void (^ _Nonnull)(NSArray<VehicleModel *> * _Nullable, NSError * _Nullable))handler;
- (void)getTransactionHistoryWithPage:(NSInteger)page perPage:(NSInteger)perPage handler:(void (^ _Nonnull)(NSArray<Transaction *> * _Nullable, NSError * _Nullable))handler;
- (void)getTransactionHistoryForVehicleWithVehicle:(VehicleModel * _Nonnull)vehicle page:(NSInteger)page perPage:(NSInteger)perPage handler:(void (^ _Nonnull)(NSArray<Transaction *> * _Nullable, NSError * _Nullable))handler;
/// Add your vehicle for your vehicle management
/// \param vehicle Your vehicle will be added
///
/// \param handler Tps Handler that you can use your for result
/// <ul>
///   <li>
///     <code>vehicles</code>: Gives the all registered vehicles
///   </li>
///   <li>
///     <code>error</code>: Gives error object that includes error logic
///   </li>
/// </ul>
///
///
/// throws:
/// <code>TpsError.someError</code>
/// <ul>
///   <li>
///     An error of type <code>TpsError</code>
///   </li>
/// </ul>
- (void)addWithVehicle:(VehicleModel * _Nonnull)vehicle handler:(void (^ _Nonnull)(VehicleModel * _Nullable, NSError * _Nullable))handler;
/// Remove your vehicle for your vehicle management
/// <ul>
///   <li>
///     <code>error</code>: Gives error object that includes error logic
///   </li>
/// </ul>
/// \param vehicle Your vehicle will be removed
///
/// \param handler Tps Handler that you can use your for result
///
///
/// throws:
/// <code>TpsError.someError</code>
/// <ul>
///   <li>
///     An error of type <code>TpsError</code>
///   </li>
/// </ul>
- (void)removeWithVehicle:(VehicleModel * _Nonnull)vehicle handler:(void (^ _Nonnull)(NSError * _Nullable))handler;
/// Update your vehicle for your vehicle management
/// <ul>
///   <li>
///     Handler Parameter: <code>vehicles</code>: Gives the all registered vehicles
///   </li>
///   <li>
///     Handler Parameter: <code>error</code>: Gives error object that includes error logic
///   </li>
/// </ul>
/// \param vehicle Pass your updated vehicle
///
/// \param handler Tps Handler that you can use your for result
///
///
/// throws:
/// <code>TpsError.someError</code>
/// <ul>
///   <li>
///     An error of type <code>TpsError</code>
///   </li>
/// </ul>
- (void)updateWithVehicle:(VehicleModel * _Nonnull)vehicle handler:(void (^ _Nonnull)(VehicleModel * _Nullable, NSError * _Nullable))handler;
@end

/// Tps environment configuration for different usage
typedef SWIFT_ENUM(NSInteger, TpsApiEnvironment, closed) {
  TpsApiEnvironmentDev = 0,
  TpsApiEnvironmentStaging = 1,
  TpsApiEnvironmentProduction = 2,
};

@class TpsEnvironment;

/// Initial creater builder for Tps
SWIFT_CLASS("_TtC6TpsSdk10TpsBuilder")
@interface TpsBuilder : NSObject
- (nonnull instancetype)initWithEnvironment:(TpsEnvironment * _Nonnull)environment tokenProvider:(id <TokenProvider> _Nonnull)tokenProvider OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, strong) id <TokenProvider> _Nonnull currentProvider;
@property (nonatomic, readonly, copy) NSString * _Nonnull token;
@property (nonatomic, readonly, strong) TpsEnvironment * _Nonnull currentEnvironment;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Environment for the Tps
SWIFT_CLASS("_TtC6TpsSdk14TpsEnvironment")
@interface TpsEnvironment : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TpsEnvironment * _Nonnull sharedInstance;)
+ (TpsEnvironment * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull baseUrl;
@property (nonatomic, readonly, strong) TpsEnvironment * _Nonnull current;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
- (TpsEnvironment * _Nonnull)selectEnvironment:(enum TpsApiEnvironment)environment SWIFT_WARN_UNUSED_RESULT;
@end


/// This is TpsSdk object that conforms the Tps protocol that can use Tps functions
SWIFT_CLASS("_TtC6TpsSdk6TpsSdk")
@interface TpsSdk : NSObject <Tps>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TpsSdk * _Nonnull shared;)
+ (TpsSdk * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
- (void)startWithBuilder:(TpsBuilder * _Nonnull)builder;
- (void)getRegisteredVehiclesWithHandler:(void (^ _Nonnull)(NSArray<VehicleModel *> * _Nullable, NSError * _Nullable))handler;
- (void)addWithVehicle:(VehicleModel * _Nonnull)vehicle handler:(void (^ _Nonnull)(VehicleModel * _Nullable, NSError * _Nullable))handler;
- (void)removeWithVehicle:(VehicleModel * _Nonnull)vehicle handler:(void (^ _Nonnull)(NSError * _Nullable))handler;
- (void)updateWithVehicle:(VehicleModel * _Nonnull)vehicle handler:(void (^ _Nonnull)(VehicleModel * _Nullable, NSError * _Nullable))handler;
- (void)getTransactionHistoryWithPage:(NSInteger)page perPage:(NSInteger)perPage handler:(void (^ _Nonnull)(NSArray<Transaction *> * _Nullable, NSError * _Nullable))handler;
- (void)getTransactionHistoryForVehicleWithVehicle:(VehicleModel * _Nonnull)vehicle page:(NSInteger)page perPage:(NSInteger)perPage handler:(void (^ _Nonnull)(NSArray<Transaction *> * _Nullable, NSError * _Nullable))handler;
@end


/// :nodoc:
SWIFT_CLASS("_TtC6TpsSdk11TpsTpsError")
@interface TpsTpsError : NSObject <NSCopying>
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC6TpsSdk11Transaction")
@interface Transaction : NSObject
@end

@class NSNumber;

/// Vehicle for the Tps
SWIFT_CLASS("_TtC6TpsSdk12VehicleModel")
@interface VehicleModel : NSObject
/// Vehicle id for need valid interactions
@property (nonatomic) NSInteger vehicleId;
/// Vehicles plate
@property (nonatomic, strong) PlateModel * _Nullable plate;
/// Card uuid for payment process
@property (nonatomic, copy) NSString * _Nonnull creditCardId;
/// Vehicle rental status
@property (nonatomic) BOOL isRental;
/// Rental vehicle validation start date
@property (nonatomic, strong) NSNumber * _Nullable validFrom;
/// Rental vehicle validation end date
@property (nonatomic, strong) NSNumber * _Nullable validTo;
@property (nonatomic, copy) NSString * _Nullable make;
@property (nonatomic, copy) NSString * _Nullable model;
@property (nonatomic, strong) NSNumber * _Nullable year;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
